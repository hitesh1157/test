/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var commons_pb = require('./commons_pb.js');
goog.exportSymbol('proto.item.Item', null, global);
goog.exportSymbol('proto.item.ItemsRtdbRelation', null, global);
goog.exportSymbol('proto.item.ListOfItems', null, global);
goog.exportSymbol('proto.item.UpdateItemsObject', null, global);
goog.exportSymbol('proto.item.UpdateItemsObject.UpdateFields', null, global);
goog.exportSymbol('proto.item.UpdateItemsObject.UpdateFields.FieldType', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.UpdateItemsObject = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.item.UpdateItemsObject, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.item.UpdateItemsObject.displayName = 'proto.item.UpdateItemsObject';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.item.UpdateItemsObject.prototype.toObject = function(opt_includeInstance) {
  return proto.item.UpdateItemsObject.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.item.UpdateItemsObject} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.UpdateItemsObject.toObject = function(includeInstance, msg) {
  var f, obj = {
    updateMapMap: (f = msg.getUpdateMapMap()) ? f.toObject(includeInstance, proto.item.UpdateItemsObject.UpdateFields.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.UpdateItemsObject}
 */
proto.item.UpdateItemsObject.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.UpdateItemsObject;
  return proto.item.UpdateItemsObject.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.UpdateItemsObject} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.UpdateItemsObject}
 */
proto.item.UpdateItemsObject.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getUpdateMapMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.item.UpdateItemsObject.UpdateFields.deserializeBinaryFromReader);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.UpdateItemsObject.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.item.UpdateItemsObject.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.UpdateItemsObject} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.UpdateItemsObject.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpdateMapMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.item.UpdateItemsObject.UpdateFields.serializeBinaryToWriter);
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.UpdateItemsObject.UpdateFields = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.item.UpdateItemsObject.UpdateFields.repeatedFields_, null);
};
goog.inherits(proto.item.UpdateItemsObject.UpdateFields, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.item.UpdateItemsObject.UpdateFields.displayName = 'proto.item.UpdateItemsObject.UpdateFields';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.item.UpdateItemsObject.UpdateFields.repeatedFields_ = [1,2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.item.UpdateItemsObject.UpdateFields.prototype.toObject = function(opt_includeInstance) {
  return proto.item.UpdateItemsObject.UpdateFields.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.item.UpdateItemsObject.UpdateFields} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.UpdateItemsObject.UpdateFields.toObject = function(includeInstance, msg) {
  var f, obj = {
    fieldList: jspb.Message.getRepeatedField(msg, 1),
    valueList: jspb.Message.getRepeatedField(msg, 2),
    typeList: jspb.Message.getRepeatedField(msg, 3)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.UpdateItemsObject.UpdateFields}
 */
proto.item.UpdateItemsObject.UpdateFields.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.UpdateItemsObject.UpdateFields;
  return proto.item.UpdateItemsObject.UpdateFields.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.UpdateItemsObject.UpdateFields} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.UpdateItemsObject.UpdateFields}
 */
proto.item.UpdateItemsObject.UpdateFields.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addField(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addValue(value);
      break;
    case 3:
      var value = /** @type {!Array.<!proto.item.UpdateItemsObject.UpdateFields.FieldType>} */ (reader.readPackedEnum());
      msg.setTypeList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.UpdateItemsObject.UpdateFields.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.item.UpdateItemsObject.UpdateFields.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.UpdateItemsObject.UpdateFields} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.UpdateItemsObject.UpdateFields.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFieldList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getValueList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getTypeList();
  if (f.length > 0) {
    writer.writePackedEnum(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.item.UpdateItemsObject.UpdateFields.FieldType = {
  STRING: 0,
  NUMBER: 1,
  TS: 2,
  BOOL: 3,
  GEOM: 4
};

/**
 * repeated string field = 1;
 * @return {!Array.<string>}
 */
proto.item.UpdateItemsObject.UpdateFields.prototype.getFieldList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array.<string>} value */
proto.item.UpdateItemsObject.UpdateFields.prototype.setFieldList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.item.UpdateItemsObject.UpdateFields.prototype.addField = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.item.UpdateItemsObject.UpdateFields.prototype.clearFieldList = function() {
  this.setFieldList([]);
};


/**
 * repeated string value = 2;
 * @return {!Array.<string>}
 */
proto.item.UpdateItemsObject.UpdateFields.prototype.getValueList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array.<string>} value */
proto.item.UpdateItemsObject.UpdateFields.prototype.setValueList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.item.UpdateItemsObject.UpdateFields.prototype.addValue = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.item.UpdateItemsObject.UpdateFields.prototype.clearValueList = function() {
  this.setValueList([]);
};


/**
 * repeated FieldType type = 3;
 * @return {!Array.<!proto.item.UpdateItemsObject.UpdateFields.FieldType>}
 */
proto.item.UpdateItemsObject.UpdateFields.prototype.getTypeList = function() {
  return /** @type {!Array.<!proto.item.UpdateItemsObject.UpdateFields.FieldType>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array.<!proto.item.UpdateItemsObject.UpdateFields.FieldType>} value */
proto.item.UpdateItemsObject.UpdateFields.prototype.setTypeList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!proto.item.UpdateItemsObject.UpdateFields.FieldType} value
 * @param {number=} opt_index
 */
proto.item.UpdateItemsObject.UpdateFields.prototype.addType = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.item.UpdateItemsObject.UpdateFields.prototype.clearTypeList = function() {
  this.setTypeList([]);
};


/**
 * map<string, UpdateFields> update_map = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.item.UpdateItemsObject.UpdateFields>}
 */
proto.item.UpdateItemsObject.prototype.getUpdateMapMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.item.UpdateItemsObject.UpdateFields>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.item.UpdateItemsObject.UpdateFields));
};


proto.item.UpdateItemsObject.prototype.clearUpdateMapMap = function() {
  this.getUpdateMapMap().clear();
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.ListOfItems = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.item.ListOfItems.repeatedFields_, null);
};
goog.inherits(proto.item.ListOfItems, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.item.ListOfItems.displayName = 'proto.item.ListOfItems';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.item.ListOfItems.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.item.ListOfItems.prototype.toObject = function(opt_includeInstance) {
  return proto.item.ListOfItems.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.item.ListOfItems} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.ListOfItems.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.item.Item.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.ListOfItems}
 */
proto.item.ListOfItems.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.ListOfItems;
  return proto.item.ListOfItems.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.ListOfItems} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.ListOfItems}
 */
proto.item.ListOfItems.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.item.Item;
      reader.readMessage(value,proto.item.Item.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.ListOfItems.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.item.ListOfItems.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.ListOfItems} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.ListOfItems.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.item.Item.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Item items = 1;
 * @return {!Array.<!proto.item.Item>}
 */
proto.item.ListOfItems.prototype.getItemsList = function() {
  return /** @type{!Array.<!proto.item.Item>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.item.Item, 1));
};


/** @param {!Array.<!proto.item.Item>} value */
proto.item.ListOfItems.prototype.setItemsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.item.Item=} opt_value
 * @param {number=} opt_index
 * @return {!proto.item.Item}
 */
proto.item.ListOfItems.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.item.Item, opt_index);
};


proto.item.ListOfItems.prototype.clearItemsList = function() {
  this.setItemsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.ItemsRtdbRelation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.item.ItemsRtdbRelation.repeatedFields_, null);
};
goog.inherits(proto.item.ItemsRtdbRelation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.item.ItemsRtdbRelation.displayName = 'proto.item.ItemsRtdbRelation';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.item.ItemsRtdbRelation.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.item.ItemsRtdbRelation.prototype.toObject = function(opt_includeInstance) {
  return proto.item.ItemsRtdbRelation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.item.ItemsRtdbRelation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.ItemsRtdbRelation.toObject = function(includeInstance, msg) {
  var f, obj = {
    rtdbIdList: jspb.Message.getRepeatedField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.ItemsRtdbRelation}
 */
proto.item.ItemsRtdbRelation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.ItemsRtdbRelation;
  return proto.item.ItemsRtdbRelation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.ItemsRtdbRelation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.ItemsRtdbRelation}
 */
proto.item.ItemsRtdbRelation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addRtdbId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.ItemsRtdbRelation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.item.ItemsRtdbRelation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.ItemsRtdbRelation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.ItemsRtdbRelation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRtdbIdList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string rtdb_id = 1;
 * @return {!Array.<string>}
 */
proto.item.ItemsRtdbRelation.prototype.getRtdbIdList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array.<string>} value */
proto.item.ItemsRtdbRelation.prototype.setRtdbIdList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.item.ItemsRtdbRelation.prototype.addRtdbId = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.item.ItemsRtdbRelation.prototype.clearRtdbIdList = function() {
  this.setRtdbIdList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.Item = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.item.Item, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.item.Item.displayName = 'proto.item.Item';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.item.Item.prototype.toObject = function(opt_includeInstance) {
  return proto.item.Item.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.item.Item} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.Item.toObject = function(includeInstance, msg) {
  var f, obj = {
    rtdbId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    alert: jspb.Message.getFieldWithDefault(msg, 2, false),
    deleted: jspb.Message.getFieldWithDefault(msg, 5, false),
    deletedTimestamp: jspb.Message.getFieldWithDefault(msg, 4, 0),
    name: jspb.Message.getFieldWithDefault(msg, 17, ""),
    endLat: +jspb.Message.getFieldWithDefault(msg, 7, 0.0),
    endLon: +jspb.Message.getFieldWithDefault(msg, 9, 0.0),
    startLat: +jspb.Message.getFieldWithDefault(msg, 27, 0.0),
    startLon: +jspb.Message.getFieldWithDefault(msg, 28, 0.0),
    startAddr: jspb.Message.getFieldWithDefault(msg, 29, ""),
    endAddr: jspb.Message.getFieldWithDefault(msg, 8, ""),
    endTime: jspb.Message.getFieldWithDefault(msg, 10, 0),
    category: jspb.Message.getFieldWithDefault(msg, 11, ""),
    description: jspb.Message.getFieldWithDefault(msg, 12, ""),
    lengthUnit: jspb.Message.getFieldWithDefault(msg, 13, ""),
    widthUnit: jspb.Message.getFieldWithDefault(msg, 32, ""),
    heightUnit: jspb.Message.getFieldWithDefault(msg, 33, ""),
    weightUnit: jspb.Message.getFieldWithDefault(msg, 21, ""),
    value: jspb.Message.getFieldWithDefault(msg, 19, 0),
    length: jspb.Message.getFieldWithDefault(msg, 16, 0),
    height: jspb.Message.getFieldWithDefault(msg, 14, 0),
    weight: jspb.Message.getFieldWithDefault(msg, 20, 0),
    width: jspb.Message.getFieldWithDefault(msg, 22, 0),
    image: jspb.Message.getFieldWithDefault(msg, 15, ""),
    imageThumbnail: jspb.Message.getFieldWithDefault(msg, 34, ""),
    personName: jspb.Message.getFieldWithDefault(msg, 24, ""),
    personPhone: jspb.Message.getFieldWithDefault(msg, 25, ""),
    owner: jspb.Message.getFieldWithDefault(msg, 23, 0),
    ownerId: jspb.Message.getFieldWithDefault(msg, 35, ""),
    requestCount: jspb.Message.getFieldWithDefault(msg, 26, 0),
    status: jspb.Message.getFieldWithDefault(msg, 30, ""),
    type: jspb.Message.getFieldWithDefault(msg, 31, ""),
    negotiable: jspb.Message.getFieldWithDefault(msg, 18, false),
    notificationsCount: jspb.Message.getFieldWithDefault(msg, 36, 0),
    viewsCount: jspb.Message.getFieldWithDefault(msg, 37, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.Item}
 */
proto.item.Item.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.Item;
  return proto.item.Item.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.Item} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.Item}
 */
proto.item.Item.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRtdbId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAlert(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDeleted(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDeletedTimestamp(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setEndLat(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setEndLon(value);
      break;
    case 27:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setStartLat(value);
      break;
    case 28:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setStartLon(value);
      break;
    case 29:
      var value = /** @type {string} */ (reader.readString());
      msg.setStartAddr(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndAddr(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEndTime(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setLengthUnit(value);
      break;
    case 32:
      var value = /** @type {string} */ (reader.readString());
      msg.setWidthUnit(value);
      break;
    case 33:
      var value = /** @type {string} */ (reader.readString());
      msg.setHeightUnit(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setWeightUnit(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setValue(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLength(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHeight(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWeight(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWidth(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setImage(value);
      break;
    case 34:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageThumbnail(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setPersonName(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setPersonPhone(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOwner(value);
      break;
    case 35:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwnerId(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRequestCount(value);
      break;
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 31:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNegotiable(value);
      break;
    case 36:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNotificationsCount(value);
      break;
    case 37:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setViewsCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.Item.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.item.Item.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.Item} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.Item.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRtdbId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAlert();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getDeleted();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getDeletedTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getEndLat();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getEndLon();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getStartLat();
  if (f !== 0.0) {
    writer.writeDouble(
      27,
      f
    );
  }
  f = message.getStartLon();
  if (f !== 0.0) {
    writer.writeDouble(
      28,
      f
    );
  }
  f = message.getStartAddr();
  if (f.length > 0) {
    writer.writeString(
      29,
      f
    );
  }
  f = message.getEndAddr();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getEndTime();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getCategory();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getLengthUnit();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getWidthUnit();
  if (f.length > 0) {
    writer.writeString(
      32,
      f
    );
  }
  f = message.getHeightUnit();
  if (f.length > 0) {
    writer.writeString(
      33,
      f
    );
  }
  f = message.getWeightUnit();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getValue();
  if (f !== 0) {
    writer.writeInt32(
      19,
      f
    );
  }
  f = message.getLength();
  if (f !== 0) {
    writer.writeInt32(
      16,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getWeight();
  if (f !== 0) {
    writer.writeInt32(
      20,
      f
    );
  }
  f = message.getWidth();
  if (f !== 0) {
    writer.writeInt32(
      22,
      f
    );
  }
  f = message.getImage();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getImageThumbnail();
  if (f.length > 0) {
    writer.writeString(
      34,
      f
    );
  }
  f = message.getPersonName();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
  f = message.getPersonPhone();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getOwner();
  if (f !== 0) {
    writer.writeInt32(
      23,
      f
    );
  }
  f = message.getOwnerId();
  if (f.length > 0) {
    writer.writeString(
      35,
      f
    );
  }
  f = message.getRequestCount();
  if (f !== 0) {
    writer.writeInt32(
      26,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      30,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      31,
      f
    );
  }
  f = message.getNegotiable();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getNotificationsCount();
  if (f !== 0) {
    writer.writeInt32(
      36,
      f
    );
  }
  f = message.getViewsCount();
  if (f !== 0) {
    writer.writeInt32(
      37,
      f
    );
  }
};


/**
 * optional string rtdb_id = 1;
 * @return {string}
 */
proto.item.Item.prototype.getRtdbId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.item.Item.prototype.setRtdbId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional bool alert = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.item.Item.prototype.getAlert = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.item.Item.prototype.setAlert = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional bool deleted = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.item.Item.prototype.getDeleted = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.item.Item.prototype.setDeleted = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional int64 deleted_timestamp = 4;
 * @return {number}
 */
proto.item.Item.prototype.getDeletedTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.item.Item.prototype.setDeletedTimestamp = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string name = 17;
 * @return {string}
 */
proto.item.Item.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/** @param {string} value */
proto.item.Item.prototype.setName = function(value) {
  jspb.Message.setField(this, 17, value);
};


/**
 * optional double end_lat = 7;
 * @return {number}
 */
proto.item.Item.prototype.getEndLat = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 7, 0.0));
};


/** @param {number} value */
proto.item.Item.prototype.setEndLat = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional double end_lon = 9;
 * @return {number}
 */
proto.item.Item.prototype.getEndLon = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 9, 0.0));
};


/** @param {number} value */
proto.item.Item.prototype.setEndLon = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * optional double start_lat = 27;
 * @return {number}
 */
proto.item.Item.prototype.getStartLat = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 27, 0.0));
};


/** @param {number} value */
proto.item.Item.prototype.setStartLat = function(value) {
  jspb.Message.setField(this, 27, value);
};


/**
 * optional double start_lon = 28;
 * @return {number}
 */
proto.item.Item.prototype.getStartLon = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 28, 0.0));
};


/** @param {number} value */
proto.item.Item.prototype.setStartLon = function(value) {
  jspb.Message.setField(this, 28, value);
};


/**
 * optional string start_addr = 29;
 * @return {string}
 */
proto.item.Item.prototype.getStartAddr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 29, ""));
};


/** @param {string} value */
proto.item.Item.prototype.setStartAddr = function(value) {
  jspb.Message.setField(this, 29, value);
};


/**
 * optional string end_addr = 8;
 * @return {string}
 */
proto.item.Item.prototype.getEndAddr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.item.Item.prototype.setEndAddr = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * optional int64 end_time = 10;
 * @return {number}
 */
proto.item.Item.prototype.getEndTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.item.Item.prototype.setEndTime = function(value) {
  jspb.Message.setField(this, 10, value);
};


/**
 * optional string category = 11;
 * @return {string}
 */
proto.item.Item.prototype.getCategory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.item.Item.prototype.setCategory = function(value) {
  jspb.Message.setField(this, 11, value);
};


/**
 * optional string description = 12;
 * @return {string}
 */
proto.item.Item.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.item.Item.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 12, value);
};


/**
 * optional string length_unit = 13;
 * @return {string}
 */
proto.item.Item.prototype.getLengthUnit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.item.Item.prototype.setLengthUnit = function(value) {
  jspb.Message.setField(this, 13, value);
};


/**
 * optional string width_unit = 32;
 * @return {string}
 */
proto.item.Item.prototype.getWidthUnit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 32, ""));
};


/** @param {string} value */
proto.item.Item.prototype.setWidthUnit = function(value) {
  jspb.Message.setField(this, 32, value);
};


/**
 * optional string height_unit = 33;
 * @return {string}
 */
proto.item.Item.prototype.getHeightUnit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 33, ""));
};


/** @param {string} value */
proto.item.Item.prototype.setHeightUnit = function(value) {
  jspb.Message.setField(this, 33, value);
};


/**
 * optional string weight_unit = 21;
 * @return {string}
 */
proto.item.Item.prototype.getWeightUnit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/** @param {string} value */
proto.item.Item.prototype.setWeightUnit = function(value) {
  jspb.Message.setField(this, 21, value);
};


/**
 * optional int32 value = 19;
 * @return {number}
 */
proto.item.Item.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/** @param {number} value */
proto.item.Item.prototype.setValue = function(value) {
  jspb.Message.setField(this, 19, value);
};


/**
 * optional int32 length = 16;
 * @return {number}
 */
proto.item.Item.prototype.getLength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/** @param {number} value */
proto.item.Item.prototype.setLength = function(value) {
  jspb.Message.setField(this, 16, value);
};


/**
 * optional int32 height = 14;
 * @return {number}
 */
proto.item.Item.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.item.Item.prototype.setHeight = function(value) {
  jspb.Message.setField(this, 14, value);
};


/**
 * optional int32 weight = 20;
 * @return {number}
 */
proto.item.Item.prototype.getWeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/** @param {number} value */
proto.item.Item.prototype.setWeight = function(value) {
  jspb.Message.setField(this, 20, value);
};


/**
 * optional int32 width = 22;
 * @return {number}
 */
proto.item.Item.prototype.getWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/** @param {number} value */
proto.item.Item.prototype.setWidth = function(value) {
  jspb.Message.setField(this, 22, value);
};


/**
 * optional string image = 15;
 * @return {string}
 */
proto.item.Item.prototype.getImage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/** @param {string} value */
proto.item.Item.prototype.setImage = function(value) {
  jspb.Message.setField(this, 15, value);
};


/**
 * optional string image_thumbnail = 34;
 * @return {string}
 */
proto.item.Item.prototype.getImageThumbnail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 34, ""));
};


/** @param {string} value */
proto.item.Item.prototype.setImageThumbnail = function(value) {
  jspb.Message.setField(this, 34, value);
};


/**
 * optional string person_name = 24;
 * @return {string}
 */
proto.item.Item.prototype.getPersonName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/** @param {string} value */
proto.item.Item.prototype.setPersonName = function(value) {
  jspb.Message.setField(this, 24, value);
};


/**
 * optional string person_phone = 25;
 * @return {string}
 */
proto.item.Item.prototype.getPersonPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/** @param {string} value */
proto.item.Item.prototype.setPersonPhone = function(value) {
  jspb.Message.setField(this, 25, value);
};


/**
 * optional int32 owner = 23;
 * @return {number}
 */
proto.item.Item.prototype.getOwner = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/** @param {number} value */
proto.item.Item.prototype.setOwner = function(value) {
  jspb.Message.setField(this, 23, value);
};


/**
 * optional string owner_id = 35;
 * @return {string}
 */
proto.item.Item.prototype.getOwnerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 35, ""));
};


/** @param {string} value */
proto.item.Item.prototype.setOwnerId = function(value) {
  jspb.Message.setField(this, 35, value);
};


/**
 * optional int32 request_count = 26;
 * @return {number}
 */
proto.item.Item.prototype.getRequestCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 26, 0));
};


/** @param {number} value */
proto.item.Item.prototype.setRequestCount = function(value) {
  jspb.Message.setField(this, 26, value);
};


/**
 * optional string status = 30;
 * @return {string}
 */
proto.item.Item.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 30, ""));
};


/** @param {string} value */
proto.item.Item.prototype.setStatus = function(value) {
  jspb.Message.setField(this, 30, value);
};


/**
 * optional string type = 31;
 * @return {string}
 */
proto.item.Item.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 31, ""));
};


/** @param {string} value */
proto.item.Item.prototype.setType = function(value) {
  jspb.Message.setField(this, 31, value);
};


/**
 * optional bool negotiable = 18;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.item.Item.prototype.getNegotiable = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 18, false));
};


/** @param {boolean} value */
proto.item.Item.prototype.setNegotiable = function(value) {
  jspb.Message.setField(this, 18, value);
};


/**
 * optional int32 notifications_count = 36;
 * @return {number}
 */
proto.item.Item.prototype.getNotificationsCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 36, 0));
};


/** @param {number} value */
proto.item.Item.prototype.setNotificationsCount = function(value) {
  jspb.Message.setField(this, 36, value);
};


/**
 * optional int32 views_count = 37;
 * @return {number}
 */
proto.item.Item.prototype.getViewsCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 37, 0));
};


/** @param {number} value */
proto.item.Item.prototype.setViewsCount = function(value) {
  jspb.Message.setField(this, 37, value);
};


goog.object.extend(exports, proto.item);
